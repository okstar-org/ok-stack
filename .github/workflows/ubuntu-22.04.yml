name: Build on Ubuntu 22.04 platforms

permissions:
  contents: write
  discussions: write

on:
  push:
    branches: [ develop, main ]
    tags:
      - "v*.*.*"
      - "v*.*.*-*"
    paths-ignore:
      - '**.md'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.gitignore'
      - '.github/**'
      - 'docs/**'
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        arch: [x64]
        os: [ubuntu-22.04]
        build_type: [Release]
        node-version: [20.x]

    steps:
      - name: Get branch names
        id: branch-names
        uses: tj-actions/branch-names@v8
      - name: Current branch names
        run: |
          echo "${{ steps.branch-names.outputs.current_branch }}"

      - uses: actions/checkout@v4

      - name: Set up JDK for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: ${{ matrix.arch }}
          cache: maven

      - name: Pull submodules
        run: |
          git submodule update --remote --init

      - name: Build with Maven
        run: mvn clean package -P docker -Dquarkus.profile=prod -Dmaven.test.skip=true

      - name: Fix file permissions
        run: find distribution/target -type f -name '*.sh' -exec chmod +x {} \;

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ${{ github.workspace }}/distribution/target/ok-stack-assembly.zip
            ${{ github.workspace }}/distribution/target/ok-stack-assembly.tar.gz

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Building the OkStack-UI
        run: |
          git clone -b ${{ steps.branch-names.outputs.current_branch }} https://github.com/okstar-org/ok-stack-ui.git
          cd ok-stack-ui
          npm install
          npm run build
          cd dist
          zip -r ok-stack-ui.zip  ok-stack

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers # TODO: Validate that caches are faster than no caches
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up variables if we're on main
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "SOURCE_TAG=latest" >> $GITHUB_ENV

      - name: Set up variables if we're on develop
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: echo "SOURCE_TAG=beta" >> $GITHUB_ENV

      - name: Set up variables if we're on a tag
        if: ${{ contains(github.ref, 'refs/tags/') }}
        run: echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_OKSTACK_BACKEND }}:${{ env.SOURCE_TAG }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: |
          echo Images published:
          echo ${{ secrets.DOCKERHUB_OPENFIREIMAGE }}:${{ steps.docker_build.outputs.digest }}
          echo ${{ secrets.DOCKERHUB_OPENFIREIMAGE }}:${{ env.SOURCE_TAG }}
